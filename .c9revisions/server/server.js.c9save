{"ts":1362596003564,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1362596014811,"patch":[[{"diffs":[[1,"\nconsole.log('starting app');\nvar express = require('express');\nvar mongo =  require('mongoskin');\nvar BSON = mongo.BSONPure;\nvar app = express();\nvar dbConfig = {\n    'dbUser' : 'dashboard-user',\n    'dbPass' : '123456',\n    'dataBase' : 'snmp-logs',\n    'dbHost' : 'linus.mongohq.com',\n    'dbPort' : '10038'};\n\nvar dbConnStr = dbConfig.dbUser + ':' +\n        dbConfig.dbPass + '@' +\n        dbConfig.dbHost + ':' +\n        dbConfig.dbPort + '/' +\n        dbConfig.dataBase;\n\napp.get('/alerts', function(req,res){\n    console.log('entered get alerts');\n    var conn = mongo.db(dbConnStr);\n    \n    console.log('Quering mongoDB with user: ' + dbConfig.dbUser +\n                'server: ' + dbConfig.dbHost +\n                'port: ' + + dbConfig.dbPort +\n                ' data base: ' + dbConfig.dataBase );\n    var filterObj = {};\n    \n    for(var prop in req.query) {\n        console.log('prop: ' + prop);\n        filterObj[prop] = prop === 'dscr' ? new RegExp('.*' + req.query[prop] + '.*', 'i') : \n            prop === 'value' ? new RegExp('.*' + req.query[prop] + '.*', 'i') :  req.query[prop];\n    }\n    console.log(filterObj);\n    conn.collection(\"snmp_logs\").find(filterObj).toArray(function(err, items){\n        if(err) throw err;\n        res.setHeader('Access-Control-Allow-Origin', '*');\n        res.setHeader('Access-Control-Allow-Headers', 'X-Requested-With');\n        res.status(200).send(JSON.stringify(items));\n    });\n});\n\napp.post('/alerts/:id/close', function(req, res){\n    var objId = req.params.id;\n    console.log(objId);\n    var conn = mongo.db(dbConnStr);\n    \n    var o_id = new BSON.ObjectID(objId);\n    \n    conn.collection('snmp_logs').update(\n            {'_id': o_id},\n            {$set:{status:'closed', 'udpDate': new Date()}}, function(err, result) {\n        res.setHeader('Access-Control-Allow-Origin', '*');\n        res.setHeader('Access-Control-Allow-Headers', 'X-Requested-With');\n        if (!err) {\n            console.log('Status updated! ' + result);\n            \n            res.status(200).setHeader('Content-Type', 'text/plain');\n            res.end('Update successful.');\n        } else {\n            console.log('Error occured' + err);\n            res.status(500).setHeader('Content-Type', 'text/plain');\n            res.end('Update had an unforseen error.');\n        }\n    });\n});\n\napp.post('/alerts/:id/update', function(req, res){\n    var objId = req.params.id;\n    console.log(objId);\n    var conn = mongo.db(dbConnStr);\n    var o_id = new BSON.ObjectID(objId);\n    var updateObj = {};\n\n    updateObj.udpDate = new Date();\n\n    for(var prop in req.query) {\n        console.log('prop: ' + prop);\n        updateObj[prop] = req.query[prop];\n    }\n\n    conn.collection('snmp_logs').update( {'_id': o_id},\n            {$set: updateObj}, function(err, result) {\n        res.setHeader('Access-Control-Allow-Origin', '*');\n        res.setHeader('Access-Control-Allow-Headers', 'X-Requested-With');\n        if (!err) {\n            console.log('Record with id: ' + o_id + ' updated! ' + result);\n            \n            res.status(200).setHeader('Content-Type', 'text/plain');\n            res.end('Update successful.');\n        } else {\n            console.log('Error occured' + err);\n            res.status(500).setHeader('Content-Type', 'text/plain');\n            res.end('Update had an unforseen error.');\n        }\n    });\n    \n});\n\nconsole.log('App listening on port 9100');\napp.listen(process.env.PORT);"]],"start1":0,"start2":0,"length1":0,"length2":3453}]],"length":3453,"saved":false}
